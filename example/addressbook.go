// Generated by github.com/davyxu/gosproto/sprotogen
// DO NOT EDIT!

package example

import (
	"reflect"
)

type MyCar int32

const (
	MyCar_Monkey MyCar = 1

	MyCar_Monk MyCar = 2

	MyCar_Pig MyCar = 3
)

type PhoneNumber struct {
	Number string `sproto:"string,0,name=Number"`

	Type int32 `sproto:"integer,1,name=Type"`
}

type Person struct {
	Name string `sproto:"string,0,name=Name"`

	Id int32 `sproto:"integer,1,name=Id"`

	Email string `sproto:"string,2,name=Email"`

	Phone []*PhoneNumber `sproto:"struct,3,array,name=Phone"`
}

type AddressBook struct {
	Person []*Person `sproto:"struct,0,array,name=Person"`
}

type MyData struct {
	Name string `sproto:"string,0,name=Name"`

	Type MyCar `sproto:"integer,1,name=Type"`

	Int32 int32 `sproto:"integer,2,name=Int32"`

	Uint32 uint32 `sproto:"integer,4,name=Uint32"`

	Int64 int64 `sproto:"integer,5,name=Int64"`

	Uint64 uint64 `sproto:"integer,6,name=Uint64"`
}

type MyProfile struct {
	NameField *MyData `sproto:"struct,1,name=NameField"`

	NameArray []*MyData `sproto:"struct,2,array,name=NameArray"`

	NameMap []*MyData `sproto:"struct,3,array,name=NameMap"`
}

var SProtoStructs = []reflect.Type{

	reflect.TypeOf((*PhoneNumber)(nil)).Elem(),

	reflect.TypeOf((*Person)(nil)).Elem(),

	reflect.TypeOf((*AddressBook)(nil)).Elem(),

	reflect.TypeOf((*MyData)(nil)).Elem(),

	reflect.TypeOf((*MyProfile)(nil)).Elem(),
}
